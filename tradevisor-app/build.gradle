plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
    id 'jacoco'
    id 'org.jsonschema2dataclass' version '2.1.0'
}

group 'ru.grnk.tradevisor'
version '1.0-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('testcontainersVersion', "1.16.3")
    set('jooq.version', "3.16.4")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.1"
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"

    }
}


repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation project(':tinkoff-api')
    implementation project(':tradevisor-db')
    implementation("chat.giga:gigachat-java:0.1.7")
    implementation ('io.netty:netty-all:4.1.100.Final') {
        exclude group: 'io.netty', module: 'netty-transport-epoll'
    }
    implementation 'com.github.RussianInvestments:invest-api-java-sdk:1.30'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation 'org.telegram:telegrambots:6.7.0'
    implementation 'org.telegram:telegrambots-meta:6.7.0'

    implementation 'net.logstash.logback:logstash-logback-encoder:7.0.1'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'io.github.cdimascio:dotenv-java:2.3.2'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'org.apache.commons:commons-lang3'

    implementation 'org.jooq:jooq'
    implementation 'ch.qos.logback:logback-classic:1.2.6'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    implementation 'org.liquibase:liquibase-core:4.3.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled(true)
}

jar {
    enabled(false)
}

generateJsonSchema2DataClass {

    dependencies {
        implementation 'javax.validation:validation-api:1.1.0.CR2'
        implementation 'javax.validation:validation-api:2.0.1.Final'
    }

    jsonSchema2Pojo {
        targetPackage = 'com.sberbank.bcpcli.notification.core.generated.model'
        removeOldOutput = true
        generateBuilders = true
        includeConstructors = true
        includeAllPropertiesConstructor = true
        useLongIntegers = true
        initializeCollections = false
        includeJsr303Annotations = true
        useJodaDates = false
        useJodaLocalDates = false
        useJodaLocalTimes = false
        useBigDecimals = true
        dateType = 'java.time.LocalDate'
        formatDates = true
        formatDateTimes = true
        includeCopyConstructor = true
    }
    generateJsonSchema2DataClass.dependsOn clean
}